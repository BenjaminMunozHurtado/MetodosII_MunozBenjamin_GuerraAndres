{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "u=[1]\n",
    "dt=[1.1,1.5,1.9]\n",
    "tmax=50\n",
    "x=[]\n",
    "y=[]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "def func_exacta_u(t):\n",
    "    y=np.e**(-t)\n",
    "    return y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "def func_prox_u(ukm1,dt,k):\n",
    "    uk=ukm1*(1-dt)**k\n",
    "    return uk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f9e988311f0>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig1=plt.figure()\n",
    "ax1=fig1.add_subplot(111)\n",
    "for i in range(len(dt)):\n",
    "    t=np.arange(0,tmax-1,dt[i])\n",
    "    for j in range(len(t)-1):\n",
    "        u.append(func_prox_u(u[j-1],dt[i],len(u)))\n",
    "    \n",
    "    ax1.scatter(t,u,label=\"dt=\"+str(dt[i]))\n",
    "    u=[1]\n",
    "\n",
    "for i in range(0,50):\n",
    "    x.append(i)\n",
    "    y.append(func_exacta_u(i))\n",
    "ax1.plot(x,y,label=\"exacta\")\n",
    "ax1.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
